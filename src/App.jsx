import React, { useState } from "react";
import seedrandom from "seedrandom";
function App() {
  const [count, setCount] = useState(0);
  const [text, setText] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    let amount = parseInt(count);
    if (count <= 0) {
      amount = 1;
    }
    if (count > 15) {
      amount = 15;
      alert("Maximum paragraphs exceeded. Generating 15 paragraphs.");
    }

    setLoading(true);

    const seed = Math.random();
    const random = seedrandom(seed);

    // Generate the API URL with the random seed as a parameter
    const apiUrl = `https://hipsum.co/api/?type=hipster-centric&paras=${amount}&seed=${seed}`;

    // Fetch the data from the API using the generated URL
    const response = await fetch(apiUrl);
    const data = await response.json();

    // Map over the array of text and replace each item with a new string
    // generated by the random number generator
    const newText = data.map((item) => {
      let words = item.split(" ");
      words = words.filter((word) => word !== "");
      words = words.map((word) => {
        let chars = word.split("");
        chars = chars.map((char) => {
          if (char === " ") return char;
          const isUppercase = char === char.toUpperCase();
          const randomChar =
            random() > 0.5 ? char.toUpperCase() : char.toLowerCase();
          return isUppercase
            ? randomChar.toUpperCase()
            : randomChar.toLowerCase();
        });
        return chars.join("");
      });
      return words.join(" ");
    });

    setText(newText);
    setLoading(false);
  };

  return (
    <section className="section-center">
      <h3>tired of boring lorem ipsum?</h3>
      <form className="lorem-form" onSubmit={handleSubmit}>
        <label htmlFor="amount">paragraphs:</label>
        <input
          type="number"
          name="amount"
          id="amount"
          value={count}
          onChange={(e) => setCount(e.target.value)}
        />
        <button type="submit" className="btn" disabled={loading}>
          {loading ? "Generating..." : "Generate"}
        </button>
      </form>
      <article className="lorem-text">
        {text.map((item, index) => {
          return <p key={index}>{item}</p>;
        })}
      </article>
    </section>
  );
}

export default App;
